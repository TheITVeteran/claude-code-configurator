name: Website CI Pipeline

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'packages/website/**'
      - '.github/workflows/website-ci.yml'
      - '!packages/website/node_modules/**'
      - '!packages/website/.next/**'
      - '!packages/website/coverage/**'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'packages/website/**'
      - '.github/workflows/website-ci.yml'
      - '!packages/website/node_modules/**'
      - '!packages/website/.next/**'
      - '!packages/website/coverage/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

defaults:
  run:
    shell: bash
    working-directory: packages/website

env:
  NODE_OPTIONS: --max-old-space-size=4096

jobs:
  # ============================================================================
  # STAGE 1: Pre-flight Checks (parallel, ~30s each)
  # Fast feedback for basic code quality issues
  # ============================================================================

  lint-check:
    name: 'Website Lint Check'
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Cache website dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.1.0
        id: cache-website-deps
        with:
          path: |
            packages/website/node_modules
            ~/.npm
            ~/.cache/npm
          key: ${{ runner.os }}-website-${{ hashFiles('packages/website/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - name: Install dependencies
        if: steps.cache-website-deps.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  format-check:
    name: 'Website Format Check'
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Cache website dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.1.0
        id: cache-website-deps
        with:
          path: |
            packages/website/node_modules
            ~/.npm
            ~/.cache/npm
          key: ${{ runner.os }}-website-${{ hashFiles('packages/website/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - name: Install dependencies
        if: steps.cache-website-deps.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check code formatting
        run: npm run format:check

  type-check:
    name: 'Website Type Check'
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Cache website dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.1.0
        id: cache-website-deps
        with:
          path: |
            packages/website/node_modules
            ~/.npm
            ~/.cache/npm
          key: ${{ runner.os }}-website-${{ hashFiles('packages/website/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - name: Install dependencies
        if: steps.cache-website-deps.outputs.cache-hit != 'true'
        run: npm ci

      - name: Type check
        run: npm run type-check

  # ============================================================================
  # STAGE 2: Build (depends on pre-flight checks)
  # ============================================================================

  build:
    name: 'Website Build'
    runs-on: ubuntu-latest
    needs: [lint-check, format-check, type-check]
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Cache website dependencies and build artifacts
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.1.0
        id: cache-website
        with:
          path: |
            packages/website/node_modules
            packages/website/.next
            ~/.npm
            ~/.cache/npm
          key: ${{ runner.os }}-website-build-${{ hashFiles('packages/website/package-lock.json') }}-${{ hashFiles('packages/website/**/*', '!packages/website/node_modules/**', '!packages/website/.next/**') }}
          restore-keys: |
            ${{ runner.os }}-website-build-${{ hashFiles('packages/website/package-lock.json') }}-
            ${{ runner.os }}-website-build-
            ${{ runner.os }}-website-

      - name: Install dependencies
        if: steps.cache-website.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build website
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: website-build-${{ github.run_number }}
          path: |
            packages/website/.next/
            packages/website/out/
          retention-days: 7

  # ============================================================================
  # STAGE 3: Core Tests (depends on build)
  # ============================================================================

  test:
    name: 'Website Tests'
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Cache website dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.1.0
        id: cache-website-deps
        with:
          path: |
            packages/website/node_modules
            ~/.npm
            ~/.cache/npm
          key: ${{ runner.os }}-website-${{ hashFiles('packages/website/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - name: Install dependencies
        if: steps.cache-website-deps.outputs.cache-hit != 'true'
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: website-build-${{ github.run_number }}
          path: packages/website/

      - name: Run tests
        run: npm test

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: website-coverage-${{ github.run_number }}
          path: packages/website/coverage/
          retention-days: 30

  # ============================================================================
  # CI Summary
  # ============================================================================

  ci-summary:
    name: 'Website CI Summary'
    runs-on: ubuntu-latest
    needs: [lint-check, format-check, type-check, build, test]
    if: always()

    steps:
      - name: CI Summary
        run: |
          echo "## Website CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint Check | ${{ needs.lint-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Format Check | ${{ needs.format-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Type Check | ${{ needs.type-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Calculate overall status
          FAILED_JOBS=0
          if [[ "${{ needs.lint-check.result }}" == "failure" ]]; then ((FAILED_JOBS++)); fi
          if [[ "${{ needs.format-check.result }}" == "failure" ]]; then ((FAILED_JOBS++)); fi
          if [[ "${{ needs.type-check.result }}" == "failure" ]]; then ((FAILED_JOBS++)); fi
          if [[ "${{ needs.build.result }}" == "failure" ]]; then ((FAILED_JOBS++)); fi
          if [[ "${{ needs.test.result }}" == "failure" ]]; then ((FAILED_JOBS++)); fi

          if [ $FAILED_JOBS -eq 0 ]; then
            echo "✅ **All website CI checks passed!**" >> $GITHUB_STEP_SUMMARY
            echo "🚀 Ready for deployment" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Website CI failed with $FAILED_JOBS failed jobs**" >> $GITHUB_STEP_SUMMARY
            echo "🔧 Please fix the issues above before deployment" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
