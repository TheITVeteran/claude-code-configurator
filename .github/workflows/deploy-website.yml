name: Website CI/CD Pipeline

on:
  push:
    branches: [main, master]
    paths:
      - 'packages/website/**'
      - '.github/workflows/deploy-website.yml'
      - '!packages/website/node_modules/**'
      - '!packages/website/.next/**'
      - '!packages/website/coverage/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'packages/website/**'
      - '.github/workflows/deploy-website.yml'
      - '!packages/website/node_modules/**'
      - '!packages/website/.next/**'
      - '!packages/website/coverage/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  Deploy-Preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Cache website dependencies and build artifacts
        uses: actions/cache@v4
        id: cache-website
        with:
          path: |
            packages/website/node_modules
            packages/website/.next
            ~/.npm
            ~/.cache/npm
            packages/website/node_modules/.cache
            ~/.vercel
          key: ${{ runner.os }}-website-${{ hashFiles('packages/website/package-lock.json') }}-${{ hashFiles('packages/website/**/*', '!packages/website/node_modules/**', '!packages/website/.next/**') }}
          restore-keys: |
            ${{ runner.os }}-website-${{ hashFiles('packages/website/package-lock.json') }}-
            ${{ runner.os }}-website-

      - name: Install Dependencies
        if: steps.cache-website.outputs.cache-hit != 'true'
        run: npm install
        working-directory: ./packages/website

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./packages/website

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./packages/website

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./packages/website

  Deploy-Production:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - name: Install Dependencies
        run: npm install
        working-directory: ./packages/website

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./packages/website

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./packages/website

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./packages/website
