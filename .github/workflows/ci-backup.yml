name: ci

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'caci/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'caci/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write
  pull-requests: read

defaults:
  run:
    shell: bash
    working-directory: caci

env:
  NODE_OPTIONS: --max-old-space-size=4096

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        node-version: [18, 20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'caci/package-lock.json'

      - name: Cache dependencies and build artifacts
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.0
        id: cache-all
        with:
          path: |
            caci/node_modules
            caci/dist
            ~/.npm
            ~/.cache/npm
            ${{ runner.os == 'Windows' && '%APPDATA%/npm-cache' || '~/.cache/npm' }}
            ${{ runner.os == 'macOS' && '~/Library/Caches/npm' || '' }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-deps-${{ hashFiles('caci/package-lock.json') }}-build-${{ hashFiles('caci/src/**/*', 'caci/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-deps-${{ hashFiles('caci/package-lock.json') }}-
            ${{ runner.os }}-node-${{ matrix.node-version }}-deps-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-node-

      - name: Configure npm for Windows
        if: runner.os == 'Windows'
        working-directory: caci
        run: |
          npm config set script-shell "cmd"

      - name: Install dependencies
        if: steps.cache-all.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache TypeScript compilation
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.0
        with:
          path: |
            caci/dist
            caci/node_modules/.cache
            ~/.cache/typescript
          key: ${{ runner.os }}-typescript-${{ hashFiles('caci/src/**/*', 'caci/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-typescript-

      - name: Build project
        run: npm run build

      - name: Run tests
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096
          FORCE_COLOR: '1'
        run: npm test

      - name: Run tests with coverage
        working-directory: caci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096
        run: npm run test:coverage

      - name: Test flakiness detection (run tests multiple times)
        working-directory: caci
        shell: bash
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096
          FORCE_COLOR: '1'
        run: |
          echo "Running tests multiple times to detect flakiness..."
          for i in 1 2 3; do
            echo "Test run $i"
            npm test || exit 1
          done

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-22.04' && matrix.node-version == '20'
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          file: ./caci/coverage/lcov.info
          flags: unittests
          name: caci-ci-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-22.04' && matrix.node-version == '20'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.4.3
        with:
          name: caci-ci-coverage-${{ github.run_number }}
          path: caci/coverage/
          retention-days: 14

      - name: Test CLI installation and basic commands
        run: |
          set -euo pipefail
          npm pack
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            # On Windows, use npm link instead of global install for testing
            echo "Testing CLI installation on Windows..."
            npm link
            # Use npx to test the CLI commands (without timeout on Windows)
            echo "Testing caci --help..."
            npx caci --help || echo "Help command completed"
            echo "Testing caci --version..."
            npx caci --version || echo "Version command completed"
          else
            echo "Testing CLI installation on Unix..."
            npm install -g caci-*.tgz
            echo "Testing caci --help..."
            timeout 30s caci --help || echo "Help command completed"
            echo "Testing caci --version..."
            timeout 30s caci --version || echo "Version command completed"
          fi

  build:
    name: build
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'caci/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Generate SBOM
        uses: anchore/sbom-action@e8d2a6937ecead383dfe75190d104edd1f9c5751 # v0.16.0
        with:
          path: ./caci
          format: spdx-json
          output-file: caci-sbom.spdx.json

      - name: Check build artifacts
        run: |
          set -euo pipefail
          ls -la dist/
          test -f dist/cli/index.js
          test -f dist/cli/index.js.map  
          test -f dist/cli/index.d.ts

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.4.3
        with:
          name: caci-build-${{ github.run_number }}
          path: |
            caci/dist/
            caci-sbom.spdx.json
          retention-days: 14

  integration-test:
    name: integration-test
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'caci/package-lock.json'

      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: caci-build-${{ github.run_number }}
          path: ./artifacts

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: |
          set -euo pipefail
          if [ -d "tests/integration" ]; then
            npm test -- --testPathPattern=integration
          else
            echo "No integration tests found, skipping..."
          fi

      - name: Test with real components.json files
        run: |
          set -euo pipefail
          # Create test scenarios
          mkdir -p test-scenarios

          # Test with existing test workspace
          if [ -f "test-workspace/components.json" ]; then
            echo "Testing with existing components.json..."
            cd test-workspace
            node ../artifacts/caci/dist/cli/index.js --help || true
            cd ..
          fi
